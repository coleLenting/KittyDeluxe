{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cole\\\\222544112_mut_assignment1\\\\src\\\\components\\\\Carousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carousel = () => {\n  _s();\n  const numberOfImages = 35; // Adjust the number of images as needed\n  const imageNames = Array.from({\n    length: numberOfImages\n  }, (_, index) => `kitty${index + 1}.png`);\n  const [isBlurred, setIsBlurred] = useState(false);\n  const toggleBlur = () => {\n    setIsBlurred(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"KITTY NFT GALLERY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleBlur,\n      children: isBlurred ? \"Show Images\" : \"Blur Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), imageNames.map((imageName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-block\",\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`../Assets/${imageName}`).default,\n        alt: `Kitty${index + 1}`,\n        width: 250,\n        height: 250,\n        style: {\n          filter: isBlurred ? \"blur(5px)\" : \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), isBlurred && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Image \", index + 1, \" is blurred\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Carousel, \"mOXOeUTzvFQ7QLSNckaGEWvtErc=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Carousel","_s","numberOfImages","imageNames","Array","from","length","_","index","isBlurred","setIsBlurred","toggleBlur","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","imageName","style","display","margin","src","require","default","alt","width","height","filter","_c","$RefreshReg$"],"sources":["C:/Users/Cole/222544112_mut_assignment1/src/components/Carousel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Carousel = () => {\r\n    const numberOfImages = 35; // Adjust the number of images as needed\r\n    const imageNames = Array.from({ length: numberOfImages }, (_, index) => `kitty${index + 1}.png`);\r\n    const [isBlurred, setIsBlurred] = useState(false);\r\n\r\n    const toggleBlur = () => {\r\n        setIsBlurred(prevState => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>KITTY NFT GALLERY</h1>\r\n            <button onClick={toggleBlur}>{isBlurred ? \"Show Images\" : \"Blur Images\"}</button>\r\n            {imageNames.map((imageName, index) => (\r\n                <div key={index} style={{ display: \"inline-block\", margin: \"10px\" }}>\r\n                    <img \r\n                        src={require(`../Assets/${imageName}`).default} \r\n                        alt={`Kitty${index + 1}`} \r\n                        width={250} \r\n                        height={250} \r\n                        style={{ filter: isBlurred ? \"blur(5px)\" : \"none\" }} \r\n                    />\r\n                    {isBlurred && <p>Image {index + 1} is blurred</p>}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Carousel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,cAAc,GAAG,EAAE,CAAC,CAAC;EAC3B,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEJ;EAAe,CAAC,EAAE,CAACK,CAAC,EAAEC,KAAK,KAAM,QAAOA,KAAK,GAAG,CAAE,MAAK,CAAC;EAChG,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACrBD,YAAY,CAACE,SAAS,IAAI,CAACA,SAAS,CAAC;EACzC,CAAC;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MAAQmB,OAAO,EAAEP,UAAW;MAAAE,QAAA,EAAEJ,SAAS,GAAG,aAAa,GAAG;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAChFd,UAAU,CAACgB,GAAG,CAAC,CAACC,SAAS,EAAEZ,KAAK,kBAC7BT,OAAA;MAAiBsB,KAAK,EAAE;QAAEC,OAAO,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAV,QAAA,gBAChEd,OAAA;QACIyB,GAAG,EAAEC,OAAO,CAAE,aAAYL,SAAU,EAAC,CAAC,CAACM,OAAQ;QAC/CC,GAAG,EAAG,QAAOnB,KAAK,GAAG,CAAE,EAAE;QACzBoB,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZR,KAAK,EAAE;UAAES,MAAM,EAAErB,SAAS,GAAG,WAAW,GAAG;QAAO;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,EACDR,SAAS,iBAAIV,OAAA;QAAAc,QAAA,GAAG,QAAM,EAACL,KAAK,GAAG,CAAC,EAAC,aAAW;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAR3CT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAChB,EAAA,CA3BID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}