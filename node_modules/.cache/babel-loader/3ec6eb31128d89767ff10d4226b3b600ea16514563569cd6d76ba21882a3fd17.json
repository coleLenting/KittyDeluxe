{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cole\\\\222544112_mut_assignment1\\\\src\\\\components\\\\ImageGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = () => {\n  _s();\n  const numberOfImages = 35; // Adjust the number of images as needed\n  const imageNames = Array.from({\n    length: numberOfImages\n  }, (_, index) => `kitty${index + 1}.png`);\n  const [isBlurred, setIsBlurred] = useState(false);\n  const toggleBlur = () => {\n    setIsBlurred(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"KITTY NFT GALLERY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          onClick: toggleBlur,\n          children: isBlurred ? \"Show Images\" : \"Find out More!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: imageNames.map((imageName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6 col-md-4 col-lg-3\",\n        style: {\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`../Assets/${imageName}`) // Added .default for dynamic imports\n          ,\n          alt: `Kitty${index + 1}`,\n          className: \"img-fluid\" // Bootstrap class for responsive images\n          ,\n          style: {\n            filter: isBlurred ? \"blur(5px)\" : \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), isBlurred && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n            padding: \"8px\",\n            borderRadius: \"5px\"\n          },\n          children: [\"This is Kitty \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageGallery, \"mOXOeUTzvFQ7QLSNckaGEWvtErc=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageGallery","_s","numberOfImages","imageNames","Array","from","length","_","index","isBlurred","setIsBlurred","toggleBlur","prevState","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","imageName","className","style","margin","src","require","alt","filter","position","top","left","transform","backgroundColor","padding","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Cole/222544112_mut_assignment1/src/components/ImageGallery.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ImageGallery = () => {\r\n    const numberOfImages = 35; // Adjust the number of images as needed\r\n    const imageNames = Array.from({ length: numberOfImages }, (_, index) => `kitty${index + 1}.png`);\r\n    const [isBlurred, setIsBlurred] = useState(false);\r\n\r\n    const toggleBlur = () => {\r\n        setIsBlurred(prevState => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div class = \"container\">\r\n            <div class = \"row\">\r\n                <div class = \"col\">\r\n                    <h1>KITTY NFT GALLERY</h1>\r\n                    <button class = \"btn btn-primary\" onClick={toggleBlur}>\r\n                        {isBlurred ? \"Show Images\" : \"Find out More!\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                {imageNames.map((imageName, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"col-sm-6 col-md-4 col-lg-3\"\r\n                        style={{ margin: \"10px\" }}\r\n                    >\r\n                        <img \r\n                            src={require(`../Assets/${imageName}`)} // Added .default for dynamic imports\r\n                            alt={`Kitty${index + 1}`} \r\n                            className=\"img-fluid\" // Bootstrap class for responsive images\r\n                            style={{ filter: isBlurred ? \"blur(5px)\" : \"none\" }}\r\n                        /> \r\n                        {isBlurred && (\r\n                            <p \r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"50%\",\r\n                                    left: \"50%\",\r\n                                    transform: \"translate(-50%, -50%)\",\r\n                                    backgroundColor: \"rgba(255, 255, 255, 0.7)\",\r\n                                    padding: \"8px\",\r\n                                    borderRadius: \"5px\"\r\n                                }}\r\n                            >\r\n                            This is Kitty {index + 1} \r\n                        </p>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageGallery;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}